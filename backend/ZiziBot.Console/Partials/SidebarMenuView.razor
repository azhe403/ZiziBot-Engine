@using ZiziBot.Common.Types
@inherits WebComponentBase<SidebarMenuView>

<AuthorizeView>
    <ChildContent Context="sidebar">
        <RadzenSidebar @bind-Expanded="@SidebarExpanded">
            <RadzenPanelMenu Click="OnParentClicked" Style="width:300px" DisplayStyle="MenuItemDisplayStyle.IconAndText">
                <ChildContent>
                    @foreach (var item in PopulateMenu())
                    {
                        <AuthorizeView Roles="@item.Roles">
                            <RadzenPanelMenuItem Text="@item.Text" Expanded="true">
                                <ChildContent>
                                    @foreach (var subItem in item.Items)
                                    {
                                        var path = item.Path != null ? $"{item.Path}/{subItem.Path}" : subItem.Path;
                                        <RadzenPanelMenuItem Text="@subItem.Text" Path="@path" Icon="@subItem.Icon"/>
                                    }
                                </ChildContent>
                            </RadzenPanelMenuItem>
                        </AuthorizeView>
                    }
                </ChildContent>
            </RadzenPanelMenu>
        </RadzenSidebar>
    </ChildContent>
</AuthorizeView>

@code {

    [Parameter]
    public bool SidebarExpanded { get; set; } = true;

    private List<ConsoleMenuModel> MenuDataCollection { get; set; } = new();

    private void OnParentClicked(MenuItemEventArgs args)
    {
        Logger.LogDebug($"{args.Text} clicked from parent");
    }

    private void OnChildClicked(MenuItemEventArgs args)
    {
        Logger.LogDebug($"{args.Text} from child clicked");
    }

    private List<ConsoleMenuModel> PopulateMenu()
    {
        MenuDataCollection = new List<ConsoleMenuModel>
        {
            new(() => MenuDataCollection)
            {
                Text = "Home",
                Items = new List<ConsoleMenuModel>()
                {
                    new(() => MenuDataCollection)
                    {
                        Text = "Home",
                        Icon = "home",
                        Path = "/"
                    }
                },
            },
            new(() => MenuDataCollection)
            {
                Text = "Group Management",
                Items = new List<ConsoleMenuModel>()
                {
                    new(() => MenuDataCollection)
                    {
                        Text = "Welcome Message",
                        Path = "welcome-message",
                        Icon = "emoji_people"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Group Staff",
                        Path = "group-staff",
                        Icon = "admin_panel_settings"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Night Mode",
                        Path = "night-mode",
                        Icon = "mode_night"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Feature Management",
                        Path = "feature-management",
                        Icon = "extension"
                    }
                },
            },
            new(() => MenuDataCollection)
            {
                Text = "Chat Management",
                Items = new List<ConsoleMenuModel>()
                {
                    new(() => MenuDataCollection)
                    {
                        Text = "Settings",
                        Path = "settings",
                        Icon = "settings"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Notes",
                        Path = "notes",
                        Icon = "notes"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Shalat Time",
                        Path = "shalat-time",
                        Icon = "place"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "RSS",
                        Path = "rss",
                        Icon = "rss_feed"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Webhook",
                        Path = "webhook",
                        Icon = "webhook"
                    }
                }
            },
            new(() => MenuDataCollection)
            {
                Text = "Administrator",
                Path = "admin",
                Roles = "Sudo",
                Items = new List<ConsoleMenuModel>()
                {
                    new(() => MenuDataCollection)
                    {
                        Text = "App Settings",
                        Path = "app-settings",
                        Icon = "settings"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Roles",
                        Path = "roles",
                        Icon = "shield"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Bot User",
                        Path = "bot-users",
                        Icon = "people"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "BadWord",
                        Path = "badword",
                        Icon = "stop"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Command Management",
                        Path = "command-management",
                        Icon = "keyboard_command_key"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Feature Management",
                        Path = "feature-management",
                        Icon = "extension"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Mirror Subscription",
                        Path = "mirror-subscription",
                        Icon = "extension"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Hangfire Dashboard",
                        Path = "hangfire",
                        Icon = "area_chart"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "Log Viewer",
                        Path = "log-viewer",
                        Icon = "text_snippet"
                    }
                }
            },
            new(() => MenuDataCollection)
            {
                Text = "Help",
                Items = new List<ConsoleMenuModel>()
                {
                    new(() => MenuDataCollection)
                    {
                        Text = "About",
                        Path = "about",
                        Icon = "info"
                    },
                    new(() => MenuDataCollection)
                    {
                        Text = "feedback",
                        Path = "feedback",
                        Icon = "forum"
                    }
                }
            }
        };

        return MenuDataCollection;
    }

}